

Dion Boles Cononical ID
69c87ef2ade18acbad320a9445f5ee0e525e0f07b06dc8481c77f7998e8141fa
69c87ef2ade18acbad320a9445f5ee0e525e0f07b06dc8481c77f7998e8141fa
509380db3905c932518516c04a2b13623d4186ded86cdacd3f58566f1dd8a013
"Owner": {
    "DisplayName": "awslabsc0w5544409t1680779960",
    "ID": "509380db3905c932518516c04a2b13623d4186ded86cdacd3f58566f1dd8a013"

AWS account ID: 031311690422
$ aws sts get-caller-identity \
    --query Account \
    --output text



Canonical user ID: 509380db3905c932518516c04a2b13623d4186ded86cdacd3f58566f1dd8a013
$ aws s3api list-buckets \
    --query Owner.ID \
    --output text

Use the get-caller-identity command as follows.
$ aws sts get-caller-identity \
    --query Account \
    --output text


aws s3api 
aws s3api put-object-acl
aws s3api get-object

 aws s3api put-object-acl edu.umuc.sdev400.testbucketmaster-676959



For example, the following command will grant read access to:
 aws s3api put-object-acl --bucket edu.umuc.sdev400.testbucketmaster-676959 --key share_this_image_20230602.jpg --grant-read

 The following will get that object if invoked 
 by an AWS user with the matching canonical ID:
 aws s3api get-object --bucket edu.umuc.sdev400.testbucketmaster-676959 --key share_this_image_20230602.jpg  myFile.jpg